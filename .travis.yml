language: generic

scripts:
  - &opam
    before_install:
      - |
        if [ "$TRAVIS_EVENT_TYPE" == cron ]
        then
          rm -rf ~/.opam ./_opam ./_cache
        fi

    install:
      - |
        if [ "$LIBEV" != no ]
        then
          sudo apt-get update -qq
          if [ "$MUSL" != yes ]
          then
            sudo apt-get install -qq libev-dev
          else
            sudo apt-get install musl-tools
            wget http://dist.schmorp.de/libev/Attic/libev-4.27.tar.gz
            tar xf libev-4.27.tar.gz
            cd libev-4.27
            CC=musl-gcc ./configure --prefix `pwd`/install
            make
            make install
            sudo cp install/include/* /usr/include/x86_64-linux-musl
            sudo cp install/lib/* /usr/lib/x86_64-linux-musl
            cd ..
          fi
        fi

      - OS=linux
      - |
        if [ "$TRAVIS_OS_NAME" == osx ]
        then
          OS=macos
        fi
      - VERSION=2.0.6
      - PKG=opam-$VERSION-x86_64-$OS
      - wget https://github.com/ocaml/opam/releases/download/$VERSION/$PKG
      - sudo mv $PKG /usr/local/bin/opam
      - sudo chmod a+x /usr/local/bin/opam

      - opam init -y --bare --disable-sandboxing --disable-shell-hook
      - CACHED=yes
      - |
        if [ ! -d _opam/bin ]
        then
          CACHED=no
        fi
      - |
        if [ "$CACHED" == no ]
        then
          rm -rf _opam
          opam switch create . $COMPILER $REPOSITORIES --no-install
        fi
      - eval `opam env`
      - opam --version
      - ocaml -version

      - opam pin add --no-action ounit 2.0.8 # 2.1.2 release is broken.
      - CACHED=yes
      - |
        if [ ! -d _cache/build ]
        then
          CACHED=no
        fi
      - |
        if [ "$CACHED" == no ]
        then
          if [ "$PPX" == no ]
          then
            opam install ./lwt.opam ./lwt_react.opam ./lwt_luv.opam --deps-only --yes
          else
            opam install . --deps-only --yes
          fi
        fi
      - |
        if [ "$CACHED" == no && "$LIBEV" != no ]
        then
          opam install -y conf-libev
        fi
      - |
        if [ "$CACHED" == yes ]
        then
          cp -r _cache/_build .
        fi

      - |
        if [ "$LIBEV" == no ]
        then
          LWT_DISCOVER_ARGUMENTS="--use-libev false"
        else
          LWT_DISCOVER_ARGUMENTS="--use-libev true"
        fi
      - export LWT_DISCOVER_ARGUMENTS

    script:
      - |
        if [ "$COVERAGE" != yes ]
        then
          if [ "$PPX" == no ]
          then
            dune build --only-packages lwt,lwt_react
            dune runtest --only-packages lwt,lwt_react --force
            unset LWT_DISCOVER_ARGUMENTS
            dune build @runtest_libuv --force --no-buffer
          else
            dune build
            dune runtest --force
            unset LWT_DISCOVER_ARGUMENTS
            dune build @runtest_libuv --force --no-buffer
          fi
        else
          make coverage
          bisect-ppx-report send-to Coveralls
        fi

      - |
        if [ "$CACHED" == no ]
        then
          mkdir -p _cache
          cp -r _build _cache
        fi

      - |
        if [ "$DOCS" == yes ]
        then
          bash src/util/travis-docs.sh
        fi
      - |
        if [ "$PACKAGING" == yes ]
        then
          make install-for-packaging-test packaging-test uninstall-after-packaging-test
        fi
      - |
        if [ "$PPX_LET" == yes ]
        then
          make ppx_let-test-deps ppx_let-test
        fi

    before_cache:
      - opam clean

    cache:
      directories:
        - $HOME/.opam
        - ./_opam
        - ./_cache

  - &esy
    install: npm install -g esy
    script:
      - esy install
      - esy build
      - 'esy sh -c "cat #{self.target_dir}/_build/default/src/unix/unix_c_library_flags.sexp"  | grep lev'
      - |
        sed -i 's#"@opam/conf-libev": "\*",##g' esy.json
      - esy install
      - esy build
      # Check `lev` isn't detected
      - 'esy sh -c "cat #{self.target_dir}/_build/default/src/unix/unix_c_library_flags.sexp"  | grep -v lev'

    cache:
      directories:
        - $HOME/.esy

matrix:
  include:
    - <<: *opam
      os: linux
      env: COMPILER=4.12.0+trunk REPOSITORIES=--repo=default,beta=git://github.com/ocaml/ocaml-beta-repository.git,alpha=git://github.com/kit-ty-kate/opam-alpha-repository.git
    - <<: *opam
      os: linux
      env: COMPILER=4.11.1
    - <<: *opam
      os: osx
      env: COMPILER=4.11.1 LIBEV=no
    - <<: *opam
      os: linux
      env: COMPILER=4.10.1 LIBEV=no PPX_LET=yes
    - <<: *opam
      os: linux
      env: COMPILER=4.09.1 DOCS=yes
    - <<: *opam
      os: linux
      env: COMPILER=4.08.1+musl+flambda MUSL=yes
    - <<: *opam
      os: linux
      env: COMPILER=4.07.1
    - <<: *opam
      os: linux
      env: COMPILER=4.06.1 LWT_STRESS_TEST=true
    - <<: *opam
      os: linux
      env: COMPILER=4.05.0+bytecode-only
    - <<: *opam
      os: linux
      env: COMPILER=4.04.2 PACKAGING=yes
    - <<: *opam
      os: linux
      env: COMPILER=4.03.0 PPX=no
    - <<: *opam
      os: linux
      env: COMPILER=4.02.3 PPX=no
    - <<: *esy
      os: linux
      env: ESY=yes

  allow_failures:
    - env: COMPILER=4.12.0+trunk REPOSITORIES=--repo=default,beta=git://github.com/ocaml/ocaml-beta-repository.git,alpha=git://github.com/kit-ty-kate/opam-alpha-repository.git
    - env: COMPILER=4.10.1 LIBEV=no PPX_LET=yes
    - env: COMPILER=4.09.1 DOCS=yes
    - env: COMPILER=4.08.1+musl+flambda MUSL=yes
    - env: COMPILER=4.07.1
    - env: COMPILER=4.06.1 LWT_STRESS_TEST=true
    - env: COMPILER=4.05.0+bytecode-only
    - env: COMPILER=4.04.2 PACKAGING=yes
    - env: COMPILER=4.03.0 PPX=no
    - env: ESY=yes

  fast_finish: true

notifications:
  email:
    on_success: always
    on_failure: always
